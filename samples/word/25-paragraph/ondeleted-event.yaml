order: 12
id: word-paragraph-ondeleted-event
name: On deleting paragraphs
description: 'Registers, triggers, and deregisters the onParagraphDeleted event that tracks the removal of paragraphs.'
host: WORD
api_set:
    WordApi: '1.6'
script:
    content: |
        $("#register-event-handler").on("click", () => tryCatch(registerEventHandler));
        $("#delete-paragraph").on("click", () => tryCatch(deleteParagraph));
        $("#deregister-event-handler").on("click", () => tryCatch(deregisterEventHandler));
        $("#setup").on("click", () => tryCatch(setup));

        let eventContext;

        async function registerEventHandler() {
          // Registers the onParagraphDeleted event handler on the document.
          await Word.run(async (context) => {
            eventContext = context.document.onParagraphDeleted.add(paragraphDeleted);
            await context.sync();

            console.log("Added event handlers for when paragraphs are deleted.");
          });
        }

        async function paragraphDeleted(event: Word.ParagraphDeletedEventArgs) {
          await Word.run(async (context) => {
            console.log(`${event.type} event detected. IDs of paragraphs that were deleted:`);
            console.log(event.uniqueLocalIds);
          });
        }

        async function deleteParagraph() {
          await Word.run(async (context) => {
            const paragraphs = context.document.body.paragraphs;
            paragraphs.load("items");
            await context.sync();

            if (paragraphs.items.length == 0) {
              console.log("There are no paragraphs in this document.");
            } else {
              console.log("Paragraph to be deleted:");
              console.log(paragraphs.items[0]);
              paragraphs.items[0].delete();
              await context.sync();
            }
          });
        }

        async function deregisterEventHandler() {
          await Word.run(eventContext.context, async (context) => {
            eventContext.remove();
            await context.sync();
          });

          eventContext = null;
          console.log("Removed event handler that was tracking when paragraphs are deleted.");
        }

        async function setup() {
          await Word.run(async (context) => {
            const body = context.document.body;
            body.clear();
            body.insertParagraph("Paragraph 1", "End");
            body.insertParagraph("Paragraph 2", "End");
            body.insertParagraph("Paragraph 3", "End");
          });
        }

        // Default helper for invoking an action and handling errors.
        async function tryCatch(callback) {
          try {
            await callback();
          } catch (error) {
            // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
            console.error(error);
          }
        }
    language: typescript
template:
    content: |-
        <section class="ms-font-m">
            This sample demonstrates how to use the onDeleted event with paragraphs.
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
            <span class="ms-Button-label">Add paragraphs</span>
          </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="register-event-handler" class="ms-Button">
            <span class="ms-Button-label">Register event handler</span>
          </button>
            <button id="delete-paragraph" class="ms-Button">
            <span class="ms-Button-label">Delete first paragraph</span>
          </button>
            <button id="deregister-event-handler" class="ms-Button">
                <span class="ms-Button-label">Remove event handler</span>
            </button>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |-
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    jquery@3.1.1
    @types/jquery@3.3.1