order: 4
id: word-document-manage-change-tracking
name: Track changes
description: This sample shows how to get and set the change tracking mode and get the before and after of reviewed text.
host: WORD
api_set:
    WordApi: '1.4'
script:
    content: |
        $("#get-change-tracking-mode").on("click", () => tryCatch(getChangeTrackingMode));
        $("#set-change-tracking-mode").on("click", () => tryCatch(setChangeTrackingMode));
        $("#get-reviewed-text").on("click", () => tryCatch(getReviewedText));
        $("#setup").on("click", () => tryCatch(setup));

        async function getChangeTrackingMode() {
          // Gets the current change tracking mode.
          await Word.run(async (context) => {
            const document: Word.Document = context.document;
            document.load("changeTrackingMode");
            await context.sync();

            if (document.changeTrackingMode === Word.ChangeTrackingMode.trackMineOnly) {
              console.log("Only my changes are being tracked.");
            } else if (document.changeTrackingMode === Word.ChangeTrackingMode.trackAll) {
              console.log("Everyone's changes are being tracked.");
            } else {
              console.log("No changes are being tracked.");
            }
          });
        }

        async function setChangeTrackingMode() {
          // Sets the change tracking mode.
          await Word.run(async (context) => {
            const mode = $("input[name='mode']:checked").val();
            if (mode === "Track only my changes") {
              context.document.changeTrackingMode = Word.ChangeTrackingMode.trackMineOnly;
            } else if (mode === "Track everyone's changes") {
              context.document.changeTrackingMode = Word.ChangeTrackingMode.trackAll;
            } else {
              context.document.changeTrackingMode = Word.ChangeTrackingMode.off;
            }

            await context.sync();

            getChangeTrackingMode();
          });
        }

        async function getReviewedText() {
          // Gets the reviewed text.
          await Word.run(async (context) => {
            const range: Word.Range = context.document.getSelection();
            const before = range.getReviewedText(Word.ChangeTrackingVersion.original);
            const after = range.getReviewedText(Word.ChangeTrackingVersion.current);

            await context.sync();

            console.log("Reviewed text (before):", before.value, "Reviewed text (after):", after.value);
          });
        }

        async function setup() {
          await Word.run(async (context) => {
            const body: Word.Body = context.document.body;
            body.clear();
            body.insertParagraph(
              "Do you want to create a solution that extends the functionality of Word? You can use the Office Add-ins platform to extend Word clients running on the web, on a Windows desktop, or on a Mac.",
              "Start"
            );
            body.paragraphs
              .getLast()
              .insertText(
                "Use add-in commands to extend the Word UI and launch task panes that run JavaScript that interacts with the content in a Word document. Any code that you can run in a browser can run in a Word add-in. Add-ins that interact with content in a Word document create requests to act on Word objects and synchronize object state.",
                "Replace"
              );
          });
        }

        // Default helper for invoking an action and handling errors.
        async function tryCatch(callback) {
          try {
            await callback();
          } catch (error) {
            // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
            console.error(error);
          }
        }
    language: typescript
template:
    content: |-
        <section class="ms-font-m">
            <p>This sample shows basic operations of the Track Changes feature.</p>
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
            <span class="ms-Button-label">Add sample text</span>
          </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <h4>Get current change tracking mode</h4>
            <button id="get-change-tracking-mode" class="ms-Button">
                  <span class="ms-Button-label">Get mode</span>
              </button>
            <h4>Set change tracking mode</h4>
            <p>
                <input type="radio" id="track-all-mode" name="mode" value="Track everyone's changes">
                <label for="track-all-mode">Track everyone's changes</label><br>
                <input type="radio" id="just-mine-mode" name="mode" value="Track only my changes">
                <label for="just-mine-mode">Track only my changes</label><br>
                <input type="radio" id="tracking-off-mode" name="mode" value="Turn change tracking off">
                <label for="tracking-off-mode">Don't track any changes</label><br>
                <button id="set-change-tracking-mode" class="ms-Button">
                    <span class="ms-Button-label">Set selected mode</span>
                </button>
            </p>
            <h4>Get reviewed text</h4>
            <p>
                <label>Select text with tracked changes in the document.</label>
                <button id="get-reviewed-text" class="ms-Button">
                  <span class="ms-Button-label">Get reviewed text</span>
              </button>
            </p>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    jquery@3.1.1
    @types/jquery@3.3.1