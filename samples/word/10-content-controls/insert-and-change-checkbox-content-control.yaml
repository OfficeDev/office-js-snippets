order: 8
id: word-content-controls-insert-and-change-checkbox-content-control
name: Manage checkbox content controls
description: 'Inserts, updates, and retrieves checkbox content controls.'
host: WORD
api_set:
    WordApi: '1.7'
script:
    content: |
        $("#insert-controls").on("click", () => tryCatch(insertCheckboxContentControls));
        $("#change-controls").on("click", () => tryCatch(toggleCheckboxContentControls));
        $("#setup").on("click", () => tryCatch(setup));

        async function insertCheckboxContentControls() {
          // Traverses each paragraph of the document and places a checkbox content control at the beginning of each.
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("$none"); // Don't need any properties; just start each paragraph with a content control.

            await context.sync();

            for (let i = 0; i < paragraphs.items.length; i++) {
              let contentControl = paragraphs.items[i]
                .getRange(Word.RangeLocation.start)
                .insertContentControl(Word.ContentControlType.checkBox);
            }
            console.log("Checkbox content controls inserted: " + paragraphs.items.length);

            await context.sync();
          });
        }

        async function toggleCheckboxContentControls() {
          // Toggles the isChecked property on checkbox content controls.
          await Word.run(async (context) => {
            let contentControls = context.document.getContentControls({
              types: [Word.ContentControlType.checkBox]
            });
            contentControls.load("items");

            await context.sync();

            const length = contentControls.items.length;
            console.log(`There are ${length} checkbox content controls.`);

            if (length <= 0) {
              return;
            }

            const checkboxContentControls = [];
            for (let i = 0; i < length; i++) {
              let contentControl = contentControls.items[i];
              contentControl.load("id,checkboxContentControl/isChecked");
              checkboxContentControls.push(contentControl);
            }

            await context.sync();

            console.log("isChecked state before:");
            const updatedCheckboxContentControls = [];
            for (let i = 0; i < checkboxContentControls.length; i++) {
              const currentCheckboxContentControl = checkboxContentControls[i];
              const isChecked = currentCheckboxContentControl.checkboxContentControl.isChecked;
              console.log(`id: ${currentCheckboxContentControl.id} ... isChecked: ${isChecked}`);

              currentCheckboxContentControl.checkboxContentControl.isChecked = !isChecked;
              currentCheckboxContentControl.load("id,checkboxContentControl/isChecked");
              updatedCheckboxContentControls.push(currentCheckboxContentControl);
            }

            await context.sync();

            console.log("isChecked state after:");
            for (let i = 0; i < updatedCheckboxContentControls.length; i++) {
              const currentCheckboxContentControl = updatedCheckboxContentControls[i];
              console.log(
                `id: ${currentCheckboxContentControl.id} ... isChecked: ${currentCheckboxContentControl.checkboxContentControl.isChecked}`
              );
            }
          });
        }

        async function setup() {
          await Word.run(async (context) => {
            const body = context.document.body;
            body.clear();
            body.insertParagraph("One more paragraph. ", "Start");
            body.insertParagraph("Inserting another paragraph. ", "Start");
            body.insertParagraph(
              "Video provides a powerful way to help you prove your point. When you click Online Video, you can paste in the embed code for the video you want to add. You can also type a keyword to search online for the video that best fits your document.",
              "Start"
            );
            body.paragraphs
              .getLast()
              .insertText(
                "To make your document look professionally produced, Word provides header, footer, cover page, and text box designs that complement each other. For example, you can add a matching cover page, header, and sidebar. Click Insert and then choose the elements you want from the different galleries. ",
                "Replace"
              );
          });
        }

        // Default helper for invoking an action and handling errors.
        async function tryCatch(callback) {
          try {
            await callback();
          } catch (error) {
            // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
            console.error(error);
          }
        }
    language: typescript
template:
    content: |-
        <section class="ms-font-m">
            This sample demonstrates how to insert and change checkbox content controls.
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
              <span class="ms-Button-label">Setup</span>
          </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <span class="ms-font-m">Insert checkbox content controls on each paragraph.</span>
            <button id="insert-controls" class="ms-Button">
            <span class="ms-Button-label">Insert</span>
          </button>
            <p>
                <span class="ms-font-m">Modify isChecked property of all checkbox content controls.</span>
                <button id="change-controls" class="ms-Button">
            <span class="ms-Button-label">Toggle</span>
          </button>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |-
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    jquery@3.1.1
    @types/jquery@3.3.1