order: 5
id: excel-table-formatting
name: Formatting
description: Formats a table.
author: OfficeDev
host: EXCEL
api_set:
    ExcelApi: '1.4'
script:
    content: |
        $("#setup").click(() => tryCatch(setup));
        $("#format-table").click(() => tryCatch(formatTable));

        async function formatTable() {
            await Excel.run(async (context) => {
                const sheet = context.workbook.worksheets.getItem("Sample");
                const expensesTable = sheet.tables.getItem("ExpensesTable");

                expensesTable.getHeaderRowRange().format.fill.color = "#C70039";
                expensesTable.getDataBodyRange().format.fill.color = "#DAF7A6";
                expensesTable.rows.getItemAt(1).getRange().format.fill.color = "#FFC300";
                expensesTable.columns.getItemAt(0).getDataBodyRange().format.fill.color = "#FFA07A";
                
              await context.sync();
            });
        }

        /** Create a new table with sample data */
        async function setup() {
            await Excel.run(async (context) => {
                context.workbook.worksheets.getItemOrNullObject("Sample").delete();
                const sheet = context.workbook.worksheets.add("Sample");

                const expensesTable = sheet.tables.add("A1:D1", true /*hasHeaders*/);
                 expensesTable.name = "ExpensesTable";

                expensesTable.getHeaderRowRange().values = [["Date", "Merchant", "Category", "Amount"]];

                expensesTable.rows.add(null /*add at the end*/, [
                    ["1/1/2017", "The Phone Company", "Communications", "$120"],
                    ["1/2/2017", "Northwind Electric Cars", "Transportation", "$142"],
                    ["1/5/2017", "Best For You Organics Company", "Groceries", "$27"],
                    ["1/10/2017", "Coho Vineyard", "Restaurant", "$33"],
                    ["1/11/2017", "Bellows College", "Education", "$350"],
                    ["1/15/2017", "Trey Research", "Other", "$135"],
                    ["1/15/2017", "Best For You Organics Company", "Groceries", "$97"]
                ]);

                sheet.getUsedRange().format.autofitColumns();
                sheet.getUsedRange().format.autofitRows();

                sheet.activate();
                await context.sync();
            });
        }

        /** Default helper for invoking an action and handling errors. */
        async function tryCatch(callback) {
            try {
                await callback();
            }
            catch (error) {
                // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
                console.error(error);
            }
        }
    language: typescript
template:
    content: |
        <section class="ms-font-m">
            <p>This sample shows how to format the different components of a table.</p>
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Create table</span>
            </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="format-table" class="ms-Button">
                <span class="ms-Button-label">Format table</span>
            </button>
        </section>
    language: html
style:
    content: |
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    jquery@3.1.1
    @types/jquery@3.3.1