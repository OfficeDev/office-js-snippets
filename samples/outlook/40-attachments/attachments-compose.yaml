id: outlook-attachments-attachments-compose
name: Manipulate attachments (Item Compose)
description: 'Adds, gets, and removes attachments from a message or an appointment in Compose mode.'
author: !<tag:yaml.org,2002:js/undefined> ''
host: OUTLOOK
api_set:
    Mailbox: '1.8'
script:
    content: |-
        document.getElementById("add").addEventListener("click", add);
        document.getElementById("addBase64").addEventListener("click", addBase64);
        document.getElementById("get").addEventListener("click", get);
        document.getElementById("remove").addEventListener("click", remove);

        function add() {
          const attachmentUrl = (document.getElementById("attachmentUrl") as HTMLInputElement).value;
          Office.context.mailbox.item.addFileAttachmentAsync(
            attachmentUrl,
            getFileName(attachmentUrl),
            { isInline: false },
            (result) => {
              console.log(result);
            }
          );
        }

        function addBase64() {
          const base64String =
            "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsSAAALEgHS3X78AAACRUlEQVRYw82XzXHbMBCFP2F8tzsQc8Ixyh0zoiuIXIGdCsxUYKqC0B04FdiuwMoM7mGOOIXqQGoAymXhgSX+itJM9kIRFLAP+3YXD5Pdbscx5oxaAIW8Ztr6l2PWmQwF4IyaieP53qdfAqQ8CwBn1JU4vpWhrbxXQA5MZfynANmcDIAzKgcy4FKGXsVJFf3nLgKyBQptfT4KQMRz2N0fcbxqmRMDWXflx0VPnrdArq0vekQ1Dv0UeHZGNebHhwjU8AzwKM43RyZnbAf58Q6ghudeWd0Aus0+5EcMIIRi3beua0D3Nm39BEAx3i7HTK4DEBJn5YxKOnaRA5+ErpMBWMpzDvx1RuXCcxOISlufAjfC7zgAsqsvUvMAD0ApPaEtGi9AIlUzKgJo60tt/SyKRkzLrAXERluf7W1gOICWaMyB386oooOWsIHvXbSoHuUSFovtHqicUVnH3EJoeT0aQEf5/XBGlc6otIOWBXAtPeZkAIJ9Bt6cUU9tZautX2nrk3MACHYr1ZKProKRtDw4o8pzAPjWo+NtpXTTvoteDDg8noDAcwbcRedAkGdFXyk2GEDcegVAFp2gyVDHjRQ4o6q2smoqtR5Hd+qMqtoALCWUUymr1m43QMZfOaMK4C0SrMsDANJ2E5FNcbdbjHC+ENl+H0myJFbLtaq4Rt8dyPBYRQV1E40nMv9rl7xrOw3DGb+Whcqu3i/OM6CUOWvgRlufNmnLYy4m77uJI7AXtdNcTDrU71LEyv7v01/N/ovL6bmu5/8A1tNWZldH0W4AAAAASUVORK5CYII=";
          Office.context.mailbox.item.addFileAttachmentFromBase64Async(
            base64String,
            "logo.png",
            { isInline: false },
            (result) => {
              console.log(result);
            }
          );
        }

        function get() {
          Office.context.mailbox.item.getAttachmentsAsync((result) => {
            if (result.status === Office.AsyncResultStatus.Failed) {
              console.error(result.error.message);
              return;
            }

            if (result.value.length > 0) {
              for (let i = 0; i < result.value.length; i++) {
                const attachment = result.value[i];
                let attachmentType;
                switch (attachment.attachmentType) {
                  case Office.MailboxEnums.AttachmentType.Cloud:
                    attachmentType = "Attachment is stored in a cloud location";
                    break;
                  case Office.MailboxEnums.AttachmentType.File:
                    attachmentType = "Attachment is a file";
                    break;
                  case Office.MailboxEnums.AttachmentType.Item:
                    attachmentType = "Attachment is an Exchange item";
                    break;
                }
                console.log(
                  "ID: " +
                    attachment.id +
                    "\n" +
                    "Type: " +
                    attachmentType +
                    "\n" +
                    "Name: " +
                    attachment.name +
                    "\n" +
                    "Size: " +
                    attachment.size +
                    "\n" +
                    "isInline: " +
                    attachment.isInline
                );
              }
            } else {
              console.log("No attachments on this message.");
            }
          });
        }

        function remove() {
          Office.context.mailbox.item.removeAttachmentAsync(
            (document.getElementById("attachmentId") as HTMLInputElement).value,
            (result) => {
              if (result.status === Office.AsyncResultStatus.Failed) {
                console.error(result.error.message);
                return;
              }

              console.log(`Attachment removed successfully.`);
            }
          );
        }

        function getFileName(url) {
          const lastIndex = url.lastIndexOf("/");
          if (lastIndex >= 0) {
            return url.substring(lastIndex + 1);
          }
          return url;
        }
    language: typescript
template:
    content: |-
        <section class="ms-Fabric ms-font-m">
            <p>This sample shows how to add, get, and remove attachments from a message or an appointment in Compose mode.</p>
            <p><b>Required mode</b>: Item Compose</p>
        </section>
        <section class="ms-Fabric samples ms-font-m">
            <h3>Try it out</h3>
            <hr>
            <h4>ADD</h4>
            <button id="addBase64" class="ms-Button">
                <div class="ms-Button-label">Add attachment from Base64</div>
            </button>
            <div class="ms-TextField">
                <label class="ms-Label">URL of attachment to add:</label>
                <input id="attachmentUrl" class="ms-TextField-field" type="text" value="https://i.imgur.com/9S36xvA.jpg" placeholder="">
          </div>
                <button id="add" class="ms-Button">
            <div class="ms-Button-label">Add attachment</div>
          </button>
                <hr>
                <h4>GET</h4>
                <button id="get" class="ms-Button">
            <div class="ms-Button-label">Get attachments</div>
          </button>
                <hr>
                <h4>REMOVE</h4>
                <div class="ms-TextField">
                    <label class="ms-Label">ID of attachment to remove:</label>
                    <input id="attachmentId" class="ms-TextField-field" type="text" value="0" placeholder="">
          </div>
                    <button id="remove" class="ms-Button">
            <div class="ms-Button-label">Remove attachment</div>
          </button>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |-
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    https://appsforoffice.microsoft.com/lib/1/hosted/office.d.ts

    https://unpkg.com/office-ui-fabric-core@11.1.0/dist/css/fabric.min.css
    https://unpkg.com/office-ui-fabric-js@1.5.0/dist/css/fabric.components.min.css