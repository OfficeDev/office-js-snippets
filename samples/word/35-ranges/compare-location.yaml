order: 3
id: word-ranges-compare-location
name: Compare range locations
description: This sample shows how to compare the locations of two ranges.
author: OfficeDev
host: WORD
api_set:
    WordApi: '1.3'
script:
    content: |
        $("#compare").on("click", () => tryCatch(compareLocations));
        $("#compare-to-selection").on("click", () => tryCatch(compareWithSelection));
        $("#setup").on("click", () => tryCatch(setup));

        async function compareLocations() {
          // Compares the location of one paragraph in relation to another paragraph.
          await Word.run(async (context) => {
            const paragraphs: Word.ParagraphCollection = context.document.body.paragraphs;
            paragraphs.load("items");

            await context.sync();

            const firstParagraphAsRange: Word.Range = paragraphs.items[0].getRange();
            const secondParagraphAsRange: Word.Range = paragraphs.items[1].getRange();

            const comparedLocation = firstParagraphAsRange.compareLocationWith(secondParagraphAsRange);

            await context.sync();

            const locationValue: Word.LocationRelation = comparedLocation.value;
            console.log(`Location of the first paragraph in relation to the second paragraph: ${locationValue}`);
          });
        }

        async function compareWithSelection() {
          // Compares the location of the second paragraph in relation to the cursor's location.
          await Word.run(async (context) => {
            const paragraphs: Word.ParagraphCollection = context.document.body.paragraphs;
            paragraphs.load("items");

            await context.sync();

            const secondParagraphAsRange: Word.Range = paragraphs.items[1].getRange();
            const selection: Word.Range = context.document.getSelection();

            const comparedLocation = secondParagraphAsRange.compareLocationWith(selection);

            await context.sync();

            const locationValue: Word.LocationRelation = comparedLocation.value;
            console.log(`Location of the second paragraph in relation to the cursor's location: ${locationValue}`);
          });
        }

        async function setup() {
          await Word.run(async (context) => {
            const body: Word.Body = context.document.body;
            body.clear();
            body.insertParagraph(
              "Do you want to create a solution that extends the functionality of Word? You can use the Office Add-ins platform to extend Word clients running on the web, on a Windows desktop, or on a Mac.",
              "Start"
            );
            body.paragraphs
              .getLast()
              .insertText(
                "Use add-in commands to extend the Word UI and launch task panes that run JavaScript that interacts with the content in a Word document. Any code that you can run in a browser can run in a Word add-in. Add-ins that interact with content in a Word document create requests to act on Word objects and synchronize object state.",
                "Replace"
              );
          });
        }

        async function tryCatch(callback) {
          try {
            await callback();
          } catch (error) {
            // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
            console.error(error);
          }
        }
    language: typescript
template:
    content: |-
        <section class="ms-font-m">
            This sample demonstrates how to compare locations of ranges.
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Add sample text</span>
            </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <h4>Compare location of first paragraph with location of second paragraph</h4>
            <button id="compare" class="ms-Button">
                <span class="ms-Button-label">Compare range locations</span>
          </button>
            <h4>Compare location of second paragraph with cursor's location</h4>
            <p>
                <div>Move cursor or select text in the document.</div>
                <button id="compare-to-selection" class="ms-Button">
                  <span class="ms-Button-label">Compare with cursor's location</span>
                </button>
            </p>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    jquery@3.1.1
    @types/jquery@3.3.1