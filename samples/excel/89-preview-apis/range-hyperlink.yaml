order: 7
id: excel-range-hyperlink
name: Range hyperlink
description: 'Create, update, and clear a hyperlink for a range.'
author: OfficeDev
host: EXCEL
api_set:
    ExcelApi: 1.7
script:
    content: |
        $("#setup").click(() => tryCatch(setup));

        $("#create-url-hyperlink").click(() => tryCatch(createUrlHyperlink));
        $("#create-document-hyperlink").click(() => tryCatch(createDocumentHyperlink));
        $("#update-hyperlink").click(() => tryCatch(updateHyperlink));
        $("#clear-hyperlink").click(() => tryCatch(clearHyperlink));

        async function createUrlHyperlink() {
            await Excel.run(async (context) => {
                const sheet = context.workbook.worksheets.getItem("Sample");
                const range = sheet.getRange("A1:E5");

                // Create a hyperlink to a URL.
                // textToDisplay and screenTip are optional attributes.
                const hyperlink = {
                    textToDisplay: "This links to Bing",
                    screenTip: "This is the screen tip",
                    address: "https://www.bing.com/"
                }
                range.hyperlink = hyperlink;

                await context.sync();
            });
        }

        async function createDocumentHyperlink() {
            await Excel.run(async (context) => {
                const sheet = context.workbook.worksheets.getItem("Sample");
                const range = sheet.getRange("A7:E11");

                // Create a hyperlink to a location within the document.
                // textToDisplay and screenTip are optional attributes.
                const hyperlink = {
                    textToDisplay: "This links to a location in the document",
                    screenTip: "This is the screen tip",
                    documentReference: "A14",
                }
                range.hyperlink = hyperlink;

                await context.sync();
            });
        }

        async function updateHyperlink() {
            await Excel.run(async (context) => {
                const sheet = context.workbook.worksheets.getItem("Sample");
                const range = sheet.getRange("A1:E5");

                const hyperlink = {
                    textToDisplay: "This links to MSN",
                    screenTip: "This is the screen tip",
                    address: "https://www.msn.com/"
                }
                range.hyperlink = hyperlink;

                await context.sync();
            });
        }

        async function clearHyperlink() {
            await Excel.run(async (context) => {
                const sheet = context.workbook.worksheets.getItem("Sample");
                const range = sheet.getRange("A1:E5");

                // Clear the hyperlink.
                // This eliminates the hyperlink but does not update text format.
                range.clear(Excel.ClearApplyTo.hyperlinks);

                // Update text format.
                range.format.font.underline = Excel.RangeUnderlineStyle.none;
                range.format.font.color = "#000000";

                await context.sync();
            });
        }

        async function setup() {
            await Excel.run(async (context) => {
                const sheet = await OfficeHelpers.ExcelUtilities
                    .forceCreateSheet(context.workbook, "Sample");

                const productsData1 = [
                    ["Vegetables", "Qty", "Unit Price", "Total Price"],
                    ["Potatoes", 10, 1.00, "=C3 * D3"],
                    ["Peppers", 7, 2.50, "=C4 * D4"],
                    ["Lettuce", 5, 1.50, "=C5 * D5"]
                ];

                const range1 = sheet.getRange("B2:E5");
                range1.values = productsData1;
                range1.format.autofitColumns();
                range1.format.fill.color = "lightgray";

                const header1 = range1.getResizedRange(-3, 0);
                header1.format.fill.color = "yellow";

                const productsData2 = [
                    ["Fruit", "Qty", "Unit Price", "Total Price"],
                    ["Apples", 10, 2.00, "=C9 * D9"],
                    ["Bananas", 5, 0.75, "=C10 * D10"],
                    ["Melons", 8, 3.50, "=C11 * D11"]
                ];

                const range2 = sheet.getRange("B8:E11");
                range2.values = productsData2;
                range2.format.autofitColumns();
                range2.format.fill.color = "lightgray";

                const header2 = range2.getResizedRange(-3, 0);
                header2.format.fill.color = "lightblue";

                sheet.activate();

                await context.sync();
            });
        }

        /** Default helper for invoking an action and handling errors. */
        async function tryCatch(callback) {
            try {
                await callback();
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }
    language: typescript
template:
    content: |-
        <section class="ms-font-m">
            <p>This sample shows how to create, update, and clear a hyperlink for a range using the Excel API.</p>
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Add sample data</span>
            </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="create-url-hyperlink" class="ms-Button">
                <span class="ms-Button-label">Create URL hyperlink</span>
            </button>
            <button id="create-document-hyperlink" class="ms-Button">
                <span class="ms-Button-label">Create document hyperlink</span>
            </button>
            <button id="update-hyperlink" class="ms-Button">
                <span class="ms-Button-label">Update hyperlink</span>
            </button>
            <button id="clear-hyperlink" class="ms-Button">
                <span class="ms-Button-label">Clear hyperlink</span>
            </button>
        </section>
    language: html
style:
    content: "section.samples {\r\n    margin-top: 20px;\r\n}\r\n\r\nsection.samples .ms-Button, section.setup .ms-Button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    margin-left: 20px;\r\n    min-width: 80px;\r\n}\r\n"
    language: css
libraries: |
    # Office.js
    https://appsforoffice.microsoft.com/lib/beta/hosted/office.js

    # CSS Libraries
    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    # NPM libraries
    core-js@2.4.1/client/core.min.js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.min.js
    jquery@3.1.1

    # IntelliSense: @types/library or node_modules paths or URL to d.ts files
    @microsoft/office-js@beta/dist/office.d.ts
    @types/core-js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.d.ts
    @types/jquery