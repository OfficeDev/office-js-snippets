order: 5
id: excel-shape-groups
name: Shape groups
description: Groups and ungroups shapes.
host: EXCEL
api_set:
    ExcelApi: 1.9
script:
    content: |
        $("#setup").click(() => tryCatch(setup));
        $("#createShapes").click(() => tryCatch(createShapes));
        $("#groupShapes").click(() => tryCatch(groupShapes));
        $("#moveGroup").click(() => tryCatch(moveGroup));
        $("#ungroupShapes").click(() => tryCatch(ungroupShapes));

        async function groupShapes() {
            await Excel.run(async (context) => {
                const sheet = context.workbook.worksheets.getItem("Shapes");
                const square = sheet.shapes.getItem("Square");
                const pentagon = sheet.shapes.getItem("Pentagon");
                const octagon = sheet.shapes.getItem("Octagon");

                const shapeGroup = sheet.shapes.addGroup([square, pentagon, octagon]);
                shapeGroup.name = "Group";
                console.log("Shapes grouped");

                await context.sync();
            });
        }

        async function moveGroup() {
            await Excel.run(async (context) => {
                const sheet = context.workbook.worksheets.getItem("Shapes");

                const shapeGroup = sheet.shapes.getItem("Group");
                shapeGroup.incrementLeft(50);
                shapeGroup.incrementTop(50);

                await context.sync();
            });
        }

        async function ungroupShapes() {
            await Excel.run(async (context) => {
                const sheet = context.workbook.worksheets.getItem("Shapes");

                const shapeGroup = sheet.shapes.getItem("Group").group;
                shapeGroup.ungroup();
                console.log("Shapes ungrouped");

                await context.sync();
            });
        }

        async function setup() {
            await Excel.run(async (context) => {
                await OfficeHelpers.ExcelUtilities.forceCreateSheet(context.workbook, "Shapes");
                const sheet = context.workbook.worksheets.getItem("Shapes");
                sheet.activate();
                await context.sync();
            });
        }

        async function createShapes() {
            await Excel.run(async (context) => {
                const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
                const rectangle = shapes.addGeometricShape(Excel.GeometricShapeType.rectangle);
                rectangle.left = 100;
                rectangle.top = 100;
                rectangle.height = 150;
                rectangle.width = 150;
                rectangle.name = "Square";
                rectangle.fill.setSolidColor("green");

                const pentagon = shapes.addGeometricShape(Excel.GeometricShapeType.pentagon);
                pentagon.left = 125;
                pentagon.top = 125;
                pentagon.height = 100;
                pentagon.width = 100;
                pentagon.name = "Pentagon";
                pentagon.fill.setSolidColor("purple");

                const octagon = shapes.addGeometricShape(Excel.GeometricShapeType.octagon);
                octagon.left = 150;
                octagon.top = 150;
                octagon.height = 50;
                octagon.width = 50;
                octagon.name = "Octagon";
                octagon.fill.setSolidColor("red");

                await context.sync();
            });
        }

        /** Default helper for invoking an action and handling errors. */
        async function tryCatch(callback) {
            try {
                await callback();
            } catch (error) {
                // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
                console.error(error);
            }
        }
    language: typescript
template:
    content: |-
        <section class="ms-font-m">
            <p>This sample shows how to group and upgroup shapes in a worksheet.</p>
        </section>
        <section class="setup ms-font-m">
          <h3>Setup</h3>
          <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Create a worksheet</span>
            </button><p/>
          <button id="createShapes" class="ms-Button">
                <span class="ms-Button-label">Create shapes</span>
            </button>
        </section>
        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="groupShapes" class="ms-Button">
                <span class="ms-Button-label">Group shapes together</span>
            </button><p/>
            <button id="moveGroup" class="ms-Button">
                <span class="ms-Button-label">Move shape group</span>
            </button><p/>
            <button id="ungroupShapes" class="ms-Button">
                <span class="ms-Button-label">Ungroup shapes</span>
            </button><p/>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.min.js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.d.ts

    jquery@3.1.1
    @types/jquery@3.3.1