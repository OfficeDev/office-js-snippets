order: 11
id: excel-chart-title-format
name: Title format
description: Adjust a chart title's format.
host: EXCEL
api_set:
    ExcelApi: 1.7
script:
    content: |
        $("#setup").click(() => tryCatch(setup));
        $("#change-title-format").click(() => tryCatch(changeTitleFormat));
        $("#change-title-substring").click(() => tryCatch(changeTitleSubstring));
        $("#change-title-orientation").click(() => tryCatch(changeTitleOrientation));
        $("#add-title-shadow").click(() => tryCatch(addTitleShadow));

        async function changeTitleFormat() {
            await Excel.run(async context => {
                const sheet = context.workbook.worksheets.getItem("Sample");
                const title = sheet.charts.getItemAt(0).title;
                title.format.fill.setSolidColor("SkyBlue");
                title.format.border.lineStyle = "Dash";

                await context.sync();
            });
        }

        async function changeTitleSubstring() {
            await Excel.run(async context => {
                let sheet = context.workbook.worksheets.getItem("Sample");
                let chart = sheet.charts.getItemAt(0);

                // Get first seven characters of the title and color them green.
                chart.title.getSubstring(0, 7).font.color = "Yellow";
                await context.sync();
            });
        }

        async function changeTitleOrientation() {
            await Excel.run(async context => {
                const sheet = context.workbook.worksheets.getItem("Sample");
                const title = sheet.charts.getItemAt(0).title;
                title.textOrientation = -45;

                await context.sync();
            });
        }

        async function addTitleShadow() {
            await Excel.run(async context => {
                const sheet = context.workbook.worksheets.getItem("Sample");
                const title = sheet.charts.getItemAt(0).title;
                title.format.font.size = 16;
                title.showShadow = true;

                await context.sync();
            });
        }

        async function setup() {
            await Excel.run(async context => {
                const sheet = await OfficeHelpers.ExcelUtilities.forceCreateSheet(context.workbook, "Sample");
                let expensesTable = sheet.tables.add("A1:E1", true);
                expensesTable.name = "SalesTable";

                expensesTable.getHeaderRowRange().values = [["Product", "Qtr1", "Qtr2", "Qtr3", "Qtr4"]];

                expensesTable.rows.add(null, [
                    ["Frames", 5000, 7000, 6544, 4377],
                    ["Saddles", 400, 323, 276, 651],
                    ["Brake levers", 12000, 8766, 8456, 9812],
                    ["Chains", 1550, 1088, 692, 853],
                    ["Mirrors", 225, 600, 923, 544],
                    ["Spokes", 6005, 7634, 4589, 8765]
                ]);

                createChart(context);
                sheet.activate();

                await context.sync();
            });
        }

        function createChart(context: Excel.RequestContext) {
            let sheet = context.workbook.worksheets.getItem("Sample");

            let dataRange = sheet.getRange("A3:E7");
            let chart = sheet.charts.add("ColumnStacked", dataRange, "Auto");
            chart.title.text = "Bicycle Parts Sales";
            chart.setPosition("A10", "H33");
            chart.legend.position = "Right";
            chart.legend.format.fill.setSolidColor("white");
            chart.dataLabels.format.font.size = 15;
            chart.dataLabels.format.font.color = "black";
        }

        /** Default helper for invoking an action and handling errors. */
        async function tryCatch(callback) {
            try {
                await callback();
            } catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }
    language: typescript
template:
    content: |+
        <section class="ms-font-m">
            <p>This sample shows how to get and set title substring for a chart.</p>
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Add sample data</span>
            </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="change-title-substring" class="ms-Button">
                <span class="ms-Button-label">Change title substring</span>
            </button><p>
            <button id="change-title-substring" class="ms-Button">
                <span class="ms-Button-label">Change title substring</span>
            </button>
            <button id="change-title-substring" class="ms-Button">
                <span class="ms-Button-label">Change title substring</span>
            </button>
        </section>

    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.min.js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.d.ts

    jquery@3.1.1
    @types/jquery@3.3.1