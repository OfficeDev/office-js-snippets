order: 7
id: excel-merged-areas
name: Get merged areas
description: This sample shows how to get the merged areas on a worksheet.
host: EXCEL
api_set:
    ExcelAPI: '1.13'
script:
    content: |
      $("#setup").click(() => tryCatch(setup));
      $("#get-merged-areas").click(() => tryCatch(getMergedAreas));

      async function getMergedAreas() {
        await Excel.run(async (context) => {
          // Retrieve the worksheet and the table in that worksheet.
          const sheet = context.workbook.worksheets.getActiveWorksheet();
          const range = sheet.getRange("B2:E6");
          
          // Retrieve the merged areas within that table and load details. 
          let mergedAreas = range.getMergedAreasOrNullObject();
          mergedAreas.load("address");
          mergedAreas.load("cellCount");

          // Highlight the merged area located at cell B2. 
          const mergedArea = sheet.getRange("B2");
          mergedArea.select();
          await context.sync();

          // Print out the details of the `mergedAreas` range object. 
          console.log(`Address of the merged area: ${mergedAreas.address}`);
          console.log(`Number of cells in the merged area: ${mergedAreas.cellCount}`);

          await context.sync();
        });
      }

      async function setup() {
        await Excel.run(async (context) => {
          context.workbook.worksheets.getItemOrNullObject("Sample").delete();
          const sheet = context.workbook.worksheets.add("Sample");

          const data = [
            ["Product chart", "", "", ""],
            ["Product", "Qty", "Unit Price", "Total Price"],
            ["Almonds", 2, 7.5, "=C3 * D3"],
            ["Coffee", 1, 34.5, "=C4 * D4"],
            ["Chocolate", 5, 9.56, "=C5 * D5"]
          ];

          const range = sheet.getRange("B2:E6");
          range.values = data;
          range.format.autofitColumns();

          const header = range.getRow(1);
          header.format.fill.color = "#4472C4";
          header.format.font.color = "white";

          // Create a merged area. 
          const chartTitle = range.getRow(0);
          chartTitle.merge(true);
          chartTitle.format.horizontalAlignment = "Center";

          sheet.activate();

          await context.sync();
        });
      }

      /** Default helper for invoking an action and handling errors. */
      async function tryCatch(callback) {
        try {
          await callback();
        } catch (error) {
          // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
          console.error(error);
        }
      }
    language: typescript
template:
    content: |-
      <section class="ms-font-m">
        <p>This sample shows how to get the merged areas on a worksheet.</p>
      </section>

      <section class="setup ms-font-m">
        <h3>Set up</h3>
        <button id="setup" class="ms-Button">
          <span class="ms-Button-label">Add sample data</span>
        </button>
      </section>

      <section class="samples ms-font-m">
        <h3>Try it out</h3>
        <button id="get-merged-areas" class="ms-Button">
          <span class="ms-Button-label">Get merged areas</span>
        </button>
      </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }
        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/beta/hosted/office.js
    @types/office-js-preview
    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css
    core-js@2.4.1/client/core.min.js
    @types/core-js
    jquery@3.1.1
    @types/jquery@3.3.1