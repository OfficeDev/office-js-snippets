id: outlook-notifications-add-getall-remove
name: Work with notification messages
description: Adds different kinds of notification messages, gets all notifications, and replaces and removes an individual notification message.
host: OUTLOOK
api_set:
    Mailbox: '1.10'
script:
    content: |-
        document.getElementById("addProgress").addEventListener("click", addProgress);
        document.getElementById("addInformational").addEventListener("click", addInformational);
        document.getElementById("addInformationalPersisted").addEventListener("click", addInformationalPersisted);
        document.getElementById("addInsight").addEventListener("click", addInsight);
        document.getElementById("addError").addEventListener("click", addError);
        document.getElementById("getAll").addEventListener("click", getAll);
        document.getElementById("replace").addEventListener("click", replace);
        document.getElementById("remove").addEventListener("click", remove);
          
        function addProgress() {
          // Adds a progress indicator to the mail item.
          const id = (document.getElementById("notificationId") as HTMLInputElement).value;
          const details =
            {
              type: Office.MailboxEnums.ItemNotificationMessageType.ProgressIndicator,
              message: "Progress indicator with id = " + id
            };
          Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);
        }

        function addInformational() {
          // Adds an informational notification to the mail item.
          const id = (document.getElementById("notificationId") as HTMLInputElement).value;
          const details =
            {
              type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,
              message: "Non-persistent informational notification message with id = " + id,
              icon: "PG.Icon.16",
              persistent: false
            };
          Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);
        }

        function addInformationalPersisted() {
          // Adds a persistent information notification to the mail item.
          const id = (document.getElementById("notificationId") as HTMLInputElement).value;
          const details =
            {
              type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,
              message: "Persistent informational notification message with id = " + id,
              icon: "PG.Icon.16",
              persistent: true
            };
          Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);
        }

        function addInsight() {
          // Adds an informational message with actions to the mail item.
          const id = (document.getElementById("notificationId") as HTMLInputElement).value;

          const itemId = Office.context.mailbox.item.itemId;
          const details = {
            type: Office.MailboxEnums.ItemNotificationMessageType.InsightMessage,
            message: "This is an insight notification with id = " + id,
            icon: "PG.Icon.16",
            actions: [
              {
                actionText: "Open insight",
                actionType: Office.MailboxEnums.ActionType.ShowTaskPane,
                // Identify whether the current mail item is in read or compose mode to set the appropriate commandId value.
                commandId: (itemId == undefined ? "PG.HelpCommand.Compose" : "PG.HelpCommand.Read"),
                contextData: { a: "aValue", b: "bValue" }
              }
            ]
          };

          Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);
        }

        function addError() {
          // Adds an error notification to the mail item.
          const id = (document.getElementById("notificationId") as HTMLInputElement).value;
          const details =
            {
              type: Office.MailboxEnums.ItemNotificationMessageType.ErrorMessage,
              message: "Error notification message with id = " + id
            };
          Office.context.mailbox.item.notificationMessages.addAsync(id, details, handleResult);
        }

        function getAll() {
          // Gets all the notification messages and their keys for the current mail item.
          Office.context.mailbox.item.notificationMessages.getAllAsync((asyncResult) => {
            if (asyncResult.status === Office.AsyncResultStatus.Failed) {
              console.log(asyncResult.error.message);
              return;
            }

            console.log(asyncResult.value);
          });
        }

        function replace() {
          // Replaces a notification message of a given key with another message.
          const id = (document.getElementById("notificationId") as HTMLInputElement).value;
          Office.context.mailbox.item.notificationMessages.replaceAsync(
            id,
            {
              type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,
              message: "Notification message with id = " + id + " has been replaced with an informational message.",
              icon: "icon2",
              persistent: false
            },
            handleResult);
        }

        function remove() {
          // Removes a notification message from the current mail item.
          const id = (document.getElementById("notificationId") as HTMLInputElement).value;
          Office.context.mailbox.item.notificationMessages.removeAsync(id, handleResult);
        }

        function handleResult(result) {
          // Helper method to display the result of an asynchronous call.
          console.log(result);
        }
    language: typescript
template:
    content: |-
        <section class="ms-Fabric ms-font-m">
          <p>This sample shows how to add different kinds of notification messages, get all, replace, and remove an individual notification message.</p>
        </section>
        <section class="ms-Fabric samples ms-font-m">
          <h2>Try it out</h2>
          <div class="ms-TextField">
            <label class="ms-Label">Notification ID to add, replace, or remove that notification:</label>
            <input id="notificationId" class="ms-TextField-field" type="text" value="my_id_00" placeholder="">
          </div>
          <h3>Add a notification</h3>
          <p>To add a notification, enter a unique ID for the notification in the text field, then select one of the notification types below.</p>
          <p><b>Note</b>:</p>
          <ul>
            <li>You can add a maximum of five notifications per mail item.</li>
            <li>You can only add one insight notification to a mail item.</li>
            <li>In Outlook on the web and in new Outlook on Windows, you can only add an insight notification to an item in compose mode.</li>
          </ul>
          <button id="addProgress" class="ms-Button">
            <div class="ms-Button-label">Add a progress notification</div>
          </button>
          <br>
          <button id="addInformational" class="ms-Button">
            <div class="ms-Button-label">Add an informational notification</div>
          </button>
          <br>
          <button id="addInformationalPersisted" class="ms-Button">
            <div class="ms-Button-label">Add a persisted informational notification</div>
          </button>
          <br>
          <button id="addInsight" class="ms-Button">
            <div class="ms-Button-label">Add an insight notification</div>
          </button>
          <br>
          <button id="addError" class="ms-Button">
            <div class="ms-Button-label">Add an error notification</div>
          </button>
          <h3>Get all notifications</h3>
          <button id="getAll" class="ms-Button">
            <div class="ms-Button-label">Get notifications</div>
          </button>
          <h3>Replace a notification</h3>
          <p>To replace a notification with an informational message, enter the ID of the notification you want to replace in the text field, then select <b>Replace notification</b>.</p>
          <button id="replace" class="ms-Button">
            <div class="ms-Button-label">Replace notification</div>
          </button>
          <h3>Remove a notification</h3>
          <p>To remove a notification, enter the ID of the notification you want to remove in the text field, then select <b>Remove notification</b>.</p>
          <button id="remove" class="ms-Button">
            <div class="ms-Button-label">Remove notification</div>
          </button>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |-
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    https://appsforoffice.microsoft.com/lib/1/hosted/office.d.ts

    https://unpkg.com/office-ui-fabric-core@11.1.0/dist/css/fabric.min.css
    https://unpkg.com/office-ui-fabric-js@1.5.0/dist/css/fabric.components.min.css