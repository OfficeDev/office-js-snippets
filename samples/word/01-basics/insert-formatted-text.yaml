id: word-basics-insert-formatted-text
name: Insert formatted text
description: Shows how to use formatting objects as well as applying pre-built styles.
author: OfficeDev
host: WORD
api_set:
    WordApi: 1.1
script:
    content: |
        $("#run").click(run);

        async function run() {
            try {
                await Word.run(async (context) => {
                    // Here we go to insert first sentence. Then we adjust the formatting.
                    // Note that replace affects the calling object, in this case the entire document body.
                    // A similar method can also be used at the range level.
                    var firstSentence = context.document.body.insertText("This is some formatted text!", "replace");
                    firstSentence.font.name = "Courier New";
                    firstSentence.font.bold = true;
                    firstSentence.font.size = 18;

                    // Second sentence, let's insert it after the previously inserted one.
                    var secondSentence = context.document.body.insertText("This is other formatted text.", "end");
                    secondSentence.font.bold = false;
                    secondSentence.font.italic = true;
                    secondSentence.font.name = "Berlin Sans FB";
                    secondSentence.font.size = 30;
                    secondSentence.font.color = "blue";

                    // You can also use pre-exsiting styles.
                    var lastSentence = context.document.body.insertParagraph("To be or not to be", "end");

                    // Use styleBuiltIn to use an enumeration of existing styles. If your style is custom make sure to use range.style = "name of your style";
                    lastSentence.styleBuiltIn = Word.Style.intenseReference;

                    await context.sync()
                    console.log("success");
                })
            } catch (e) {
                OfficeHelpers.Utilities.log(e);
            }
        }
    language: typescript
template:
    content: |-
        <p class="ms-font-m">Shows how to insert basic formatted text and apply built-in styles.</p>
        <button id="run" class="ms-Button">
            <span class="ms-Button-label">Run code</span>
        </button>
    language: html
style:
    content: |-
        body {
            margin: 0;
            padding: 10px;
        }


        /* Button customization, including overwriting some Fabric defaults */

        .ms-Button, .ms-Button:focus {
            background: #2b579a;
            border: #2b579a;
        }

            .ms-Button > .ms-Button-label,
            .ms-Button:focus > .ms-Button-label,
            .ms-Button:hover > .ms-Button-label {
                color: white;
            }

            .ms-Button:hover, .ms-Button:active {
                background: #204072;
            }

            .ms-Button.is-disabled, .ms-Button:disabled {
                background-color: #f4f4f4;
                border-color: #f4f4f4;
            }

            .ms-Button.is-disabled .ms-Button-label,
            .ms-Button:disabled .ms-Button-label {
                color: #a6a6a6;
            }
    language: css
libraries: |-
    // Office.js
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js

    // NPM libraries
    jquery@3.1.1
    office-ui-fabric-js@1.4.0/dist/js/fabric.min.js
    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.min.js
    core-js@2.4.1/client/core.min.js

    // IntelliSense: Use dt~library_name for DefinitelyTyped or URLs to d.ts files
    @types/office-js
    @types/jquery
    @types/core-js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.d.ts