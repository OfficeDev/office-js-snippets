order: 1
id: excel-named-item-create-named-item
name: Create a named item
description: Create a named item for a formula
author: OfficeDev
host: EXCEL
api_set:
    ExcelApi: 1.4
script:
    content: |
        $("#add-name").click(addName);

        async function addName() {
            try {
                await Excel.run(async (context) => {

                    await OfficeHelpers.ExcelUtilities.forceCreateSheet(context.workbook, "Sample");

                    const sheet = context.workbook.worksheets.getItem("Sample");

                    let expensesTable = sheet.tables.add("A1:D1", true);
                    expensesTable.name = "ExpensesTable";

                    expensesTable.getHeaderRowRange().values = [["DATE", "MERCHANT", "CATEGORY", "AMOUNT"]];

                    let newData = transactions.map(item =>
                        [item.DATE, item.MERCHANT, item.CATEGORY, item.AMOUNT]);

                    expensesTable.rows.add(null, newData);

                    sheet.names.add("TotalAmount", "=SUM(ExpensesTable[AMOUNT])");

                    sheet.getRange("D11").values = [["=TotalAmount"]];

                    if (Office.context.requirements.isSetSupported("ExcelApi", 1.2)) {
                        sheet.getUsedRange().format.autofitColumns();
                        sheet.getUsedRange().format.autofitRows();
                    }

                    sheet.activate();

                    await context.sync();
                });
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }

        const transactions = [
            {
                "DATE": "1/1/2017",
                "MERCHANT": "The Phone Company",
                "CATEGORY": "Communications",
                "AMOUNT": "$120"
            },
            {
                "DATE": "1/1/2017",
                "MERCHANT": "SouthRidge Video",
                "CATEGORY": "Entertainment",
                "AMOUNT": "$40"
            },
            {
                "DATE": "1/1/2017",
                "MERCHANT": "Coho Winery",
                "CATEGORY": "Restaurant",
                "AMOUNT": "$47"
            },
            {
                "DATE": "1/2/2017",
                "MERCHANT": "Contoso, Ltd",
                "CATEGORY": "Shopping",
                "AMOUNT": "$56"
            },
            {
                "DATE": "1/2/2017",
                "MERCHANT": "Contoso, Ltd",
                "CATEGORY": "Shopping",
                "AMOUNT": "$110"
            },
            {
                "DATE": "1/2/2017",
                "MERCHANT": "Liberty Bakery & Cafe",
                "CATEGORY": "Groceries",
                "AMOUNT": "$27"
            },
            {
                "DATE": "1/2/2017",
                "MERCHANT": "Liberty Bakery & Cafe",
                "CATEGORY": "Groceries",
                "AMOUNT": "$38"
            },
            {
                "DATE": "1/2/2017",
                "MERCHANT": "Northwind Electric Cars",
                "CATEGORY": "Transportation",
                "AMOUNT": "$42"
            },
            {
                "DATE": "1/2/2017",
                "MERCHANT": "Best For You Organics Company",
                "CATEGORY": "Groceries",
                "AMOUNT": "$27"
            }
        ];
    language: typescript
template:
    content: |+
        <section class="ms-font-m">
            <p>This sample shows how to create a named item using the Excel JavaScript API. Note that this API requires the Excel 1.4 requirement set.</p>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="add-name" class="ms-Button">
                <span class="ms-Button-label">Create a named item for a formula</span>
            </button>
        </section>

    language: html
style:
    content: |
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.min.js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.d.ts

    jquery@3.1.1
    @types/jquery