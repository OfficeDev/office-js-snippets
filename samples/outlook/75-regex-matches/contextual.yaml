id: outlook-regex-matches-contextual
name: 'Get regex matches (Item Read, contextual)'
description: Gets regex matches when the add-in is opened as a contextual add-in.
host: OUTLOOK
api_set:
    Mailbox: '1.6'
script:
    content: |
        $("#getRegExMatches").on("click", getRegExMatches);
        $("#getRegExMatchesByName").on("click", getRegExMatchesByName);
        $("#getSelectedRegExMatches").on("click", getSelectedRegExMatches);

        function getRegExMatches() {
            // This API only works when you click on the highlighted word "ScriptLab".
            console.log(Office.context.mailbox.item.getRegExMatches());
        }

        function getRegExMatchesByName() {
            // This API only works when you click on the highlighted word "ScriptLab".
            console.log(Office.context.mailbox.item.getRegExMatchesByName("sampleRegexName"));
        }

        function getSelectedRegExMatches() {
            const matches = Office.context.mailbox.item.getSelectedRegExMatches();
            if (matches) {
                console.log(matches);
            } else {
                console.error("Open add-in by clicking on a highlighted regex match, for this API to return something useful.");
            }
        }

        /* This add-in declares extension point manifest rules copied below.
        For regex match, try running it on an email that has "ScriptLab" in its content.
        Note: The following only applies when your add-in uses an XML manifest. Contextual add-ins aren't supported when a unified app manifest for Microsoft 365 (https://learn.microsoft.com/office/dev/add-ins/develop/unified-manifest-overview) is in use.
        <ExtensionPoint xsi:type="DetectedEntity">
            <Rule xsi:type="RuleCollection" Mode="Or">
                <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="sampleRegexName" RegExValue="ScriptLab" PropertyName="BodyAsPlaintext" IgnoreCase="true" Highlight="All" />
            </Rule>
        </ExtensionPoint>
        */
    language: typescript
template:
    content: |-
        <section class="ms-font-m">
            <p>This sample shows how to get regex matches.</p>
            <p><b>Note</b>: Contextual add-ins only support the use of an XML manifest. This feature isn't supported when your
                add-in uses a
                <a target="_blank"
                    href="https://learn.microsoft.com/office/dev/add-ins/develop/unified-manifest-overview">unified app manifest
                    for Microsoft 365</a>.</p>
            <p><b>Required mode</b>: Item Read, contextual add-in</p>
        </section>

        <section class="samples ms-font-m">
            <p><b>Tip</b>: Try this out as a <a target="_blank"
                    href="https://learn.microsoft.com/outlook/add-ins/contextual-outlook-add-ins">contextual add-in</a>.</p>
            <button id="getRegExMatches" class="ms-Button">
                <div class="ms-Button-label">Get regex matches</div>
            </button>
            <button id="getRegExMatchesByName" class="ms-Button">
                <div class="ms-Button-label">Get regex matches by name</div>
            </button>
            <button id="getSelectedRegExMatches" class="ms-Button">
                <div class="ms-Button-label">Get selected regex matches</div>
            </button>
        </section>
    language: html
style:
    content: |
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    jquery@3.1.1
    @types/jquery@3.3.1