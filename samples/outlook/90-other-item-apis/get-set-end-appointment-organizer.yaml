order: 10
id: outlook-other-item-apis-get-set-end-appointment-organizer
name: Get and set the end date and time (Appointment Organizer)
description: Gets and sets the end date and time of an appointment in Compose mode.
host: OUTLOOK
api_set:
    Mailbox: '1.1'
script:
    content: |-
        document.getElementById("get-utc").addEventListener("click", getUtc);
        document.getElementById("get-local").addEventListener("click", getLocal);
        document.getElementById("set").addEventListener("click", set);

        function getUtc() {
          Office.context.mailbox.item.end.getAsync((result) => {
            if (result.status !== Office.AsyncResultStatus.Succeeded) {
              console.error(`Action failed with message ${result.error.message}`);
              return;
            }

            const time = result.value;
            console.log(`Appointment ends (UTC): ${time.toUTCString()}`);
          });
        }

        function getLocal() {
          Office.context.mailbox.item.end.getAsync((result) => {
            if (result.status !== Office.AsyncResultStatus.Succeeded) {
              console.error(`Action failed with message ${result.error.message}`);
              return;
            }

            const time = result.value;
            const localTime = Office.context.mailbox.convertToLocalClientTime(time);
            console.log(`Appointment ends (local): ${localTime.month + 1}/${localTime.date}/${localTime.year}, ${localTime.hours}:${localTime.minutes}:${localTime.seconds}`);
          });
        }

        function set() {
          Office.context.mailbox.item.start.getAsync((result) => {
            if (result.status !== Office.AsyncResultStatus.Succeeded) {
              console.error(`Get start date failed with message ${result.error.message}`);
              return;
            }

            const end = result.value; // Set end to current start date and time.
            end.setDate(end.getDate() + 1); // Set end as 1 day later than start date.
            Office.context.mailbox.item.end.setAsync(end, (result) => {
              if (result.status !== Office.AsyncResultStatus.Succeeded) {
                console.error(`Set end date failed with message ${result.error.message}`);
                return;
              }
              console.log(`Successfully set end date and time to ${end}`);
            });
          });
        }
    language: typescript
template:
    content: |-
        <section class="ms-Fabric ms-font-m">
            <p>This sample shows how to get and set the end date and time of an appointment in Compose mode.</p>
            <p><b>Required mode</b>: Appointment Organizer</p>
        </section>
        <section class="ms-Fabric samples ms-font-m">
            <h3>Try it out</h3>
            <button id="set" class="ms-Button">
              <div class="ms-Button-label">Set end date and time</div>
            </button>
            <button id="get-utc" class="ms-Button">
              <div class="ms-Button-label">Get end date and time (UTC)</div>
            </button>
            <button id="get-local" class="ms-Button">
              <div class="ms-Button-label">Get end date and time (local)</div>
            </button>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |-
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    https://appsforoffice.microsoft.com/lib/1/hosted/office.d.ts

    https://unpkg.com/office-ui-fabric-core@11.1.0/dist/css/fabric.min.css
    https://unpkg.com/office-ui-fabric-js@1.5.0/dist/css/fabric.components.min.css