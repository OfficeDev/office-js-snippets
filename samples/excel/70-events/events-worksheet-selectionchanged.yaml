order: 8
id: excel-events-worksheet-selectionchanged
name: Events - Worksheet onSelectionChanged
description: Add an event handler for the worksheet onSelectionChanged event
host: EXCEL
api_set:
    ExcelApi: 1.7
script:
    content: |+
        $("#setup").click(() => tryCatch(setup));
        $("#register-on-selection-changed-handler").click(() => tryCatch(registerSelectionChangedHandler));
        $("#select-range").click(() => tryCatch(selectRange));

        async function registerSelectionChangedHandler() {
            await Excel.run(async (context) => {

                let sheet = context.workbook.worksheets.getItem("Sample");
                sheet.onSelectionChanged.add(onSelectionChange);

                await context.sync();

                console.log("Added worksheet selection changed event handler.");
            });
        }

        async function selectRange() {
            await Excel.run(async (context) => {
                let sheet = context.workbook.worksheets.getItem("Sample");
                let range = sheet.getRange("B7:C7");
                range.select();

                await context.sync();
            });
        }
          
        async function onSelectionChange(event) {
            await Excel.run(async (context) => {
                console.log("The selected range has changed to: " + event.address);
            });
        }

        async function setup() {
            await Excel.run(async (context) => {
                let sheet = await OfficeHelpers.ExcelUtilities
                    .forceCreateSheet(context.workbook, "Sample");
                let salesTable = sheet.tables.add('A1:E1', true);
                salesTable.name = "SalesTable";

                salesTable.getHeaderRowRange().values = [["Product", "Qtr1", "Qtr2", "Qtr3", "Qtr4"]];

                salesTable.rows.add(null, [
                   ["Frames", 5000, 7000, 6544, 4377],
                    ["Saddles", 400, 323, 276, 651],
                    ["Brake levers", 12000, 8766, 8456, 9812],
                    ["Chains", 1550, 1088, 692, 853],
                    ["Mirrors", 225, 600, 923, 544],
                    ["Spokes", 6005, 7634, 4589, 8765]
                ]);

                if (Office.context.requirements.isSetSupported("ExcelApi", 1.7)) {
                    sheet.getUsedRange().format.autofitColumns();
                    sheet.getUsedRange().format.autofitRows();
               }

                sheet.activate();

                await context.sync();
            });
        }

        /** Default helper for invoking an action and handling errors. */
        async function tryCatch(callback) {
            try {
                await callback();
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }



    language: typescript
template:
    content: |+
        <section class="ms-font-m">
            <p>This sample shows how to add an event handler for the worksheet onSelectionChanged event.</p>
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Add sample data</span>
            </button>
        </section>


        <section class="samples ms-font-m">
            <p>Press the button and select a range manually. Watch the console. Next press the second button to select a range programmatically.</p>
            <button id="register-on-selection-changed-handler" class="ms-Button">
                <span class="ms-Button-label">Register onSelectionChanged handler</span>
            </button>
        </section>


        <section class="samples ms-font-m">
            <button id="select-range" class="ms-Button">
                <span class="ms-Button-label">Select range</span>
            </button>
        </section>

    language: html
style:
    content: |
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.min.js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.d.ts

    jquery@3.1.1
    @types/jquery@3.1.1