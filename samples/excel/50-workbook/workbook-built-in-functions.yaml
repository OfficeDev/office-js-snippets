order: 10
id: excel-workbook-built-in-function
name: Use built-in Excel functions
description: Use the VLOOKUP and SUM built-in Excel functions.
host: EXCEL
api_set: 
  ExcelAPI: '1.2'
script:
  content: |
    $("#create-table").on("click", () => tryCatch(createTable));
    $("#call-vlookup").on("click", () => tryCatch(callVlookup));
    $("#nest-functions").on("click", () => tryCatch(nestFunctions));

    async function createTable() {
      await Excel.run(async (context) => {
        context.workbook.worksheets.getItemOrNullObject("Sample").delete();
        const sheet = context.workbook.worksheets.add("Sample");

        const expensesTable = sheet.tables.add("A1:D1", true /*hasHeaders*/);
        expensesTable.name = "ExpensesTable";

        expensesTable.getHeaderRowRange().values = [["Product", "November", "December", "January"]];

        expensesTable.rows.add(null /*add at the end*/, [
          ["Hammer", "23", "18", "17"],
          ["Wrench", "12", "11", "14"],
          ["Saw", "5", "15", "19"]
        ]);

        sheet.getUsedRange().format.autofitColumns();
        sheet.getUsedRange().format.autofitRows();

        sheet.activate();

        await context.sync();
      });
    }

    async function callVlookup() {
      await Excel.run(async (context) => {
        let range = context.workbook.worksheets.getItem("Sample").getRange("A1:D4");
        let unitSoldInNov = context.workbook.functions.vlookup("Wrench", range, 2, false);
        unitSoldInNov.load("value");

        await context.sync();
        console.log(" Number of wrenches sold in November = " + unitSoldInNov.value);

        await context.sync();
      });
    }

    async function nestFunctions() {
      await Excel.run(async (context) => {
        let range = context.workbook.worksheets.getItem("Sample").getRange("A1:D4");
        let sumOfTwoLookups = context.workbook.functions.sum(
          context.workbook.functions.vlookup("Wrench", range, 2, false),
          context.workbook.functions.vlookup("Wrench", range, 3, false)
        );
        sumOfTwoLookups.load("value");

        await context.sync();
        console.log(" Number of wrenches sold in November and December = " + sumOfTwoLookups.value);
      });
    }

    /** Default helper for invoking an action and handling errors. */
    async function tryCatch(callback) {
      try {
        await callback();
      } catch (error) {
        // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
        console.error(error);
      }
    }
  language: typescript
template:
  content: |-
    <section class="ms-font-m">
      <p>This sample shows how to use the built-in Excel functions <code>VLOOKUP</code> and <code>SUM</code>.</p>
      <p>First, this sample uses <code>VLOOKUP</code> to return the number of wrenches
        sold in November. Next, it uses <code>VLOOKUP</code> to find the number of wrenches sold in November,
        December, and January and uses <code>SUM</code> to combine the three values.</p>
    </section>

    <section class="samples ms-font-m">
      <h3>Try it out</h3>
      <button id="create-table" class="ms-Button">
        <span class="ms-Button-label">Create table</span>
        </button>
      <button id="call-vlookup" class="ms-Button">
        <span class="ms-Button-label">Use <code>VLOOKUP</code> to return Wrench data</span>
      </button>
      <button id="nest-functions" class="ms-Button">
        <span class="ms-Button-label">Use <code>SUM</code> on <code>VLOOKUP</code> results</span>
      </button>
    </section>
  language: html
style:
  content: |
    section.samples {
        margin-top: 20px;
    }

    section.samples .ms-Button, section.setup .ms-Button {
        display: block;
        margin-bottom: 5px;
        margin-left: 20px;
        min-width: 80px;
    }
  language: css
libraries: |
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js
  @types/office-js

  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  core-js@2.4.1/client/core.min.js
  @types/core-js

  jquery@3.1.1
  @types/jquery@3.3.1
