order: 1
id: outlook-categories-work-with-categories
name: Work with item categories
description: 'Gets, adds, and removes categories assigned to the item.'
host: OUTLOOK
api_set:
    Mailbox: '1.8'
script:
    content: |
        $("#get-categories").click(getCategories);
        $("#add-categories").click(addCategories);
        $("#remove-categories").click(removeCategories);

        function getCategories() {
          Office.context.mailbox.item.categories.getAsync(function(asyncResult) {
            if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
              var categories = asyncResult.value;
              if (categories && categories.length > 0) {
                console.log("Categories assigned to this item:");
                console.log(JSON.stringify(categories));
              } else {
                console.log("There are no categories assigned to this item.");
              }
            } else {
              console.error(asyncResult.error);
            }
          });
        }

        function addCategories() {
          // Note: In order for you to successfully add a category,
          // it must be in the mailbox categories master list.

          Office.context.mailbox.masterCategories.getAsync(function(asyncResult) {
            if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
              var masterCategories = asyncResult.value;
              if (masterCategories && masterCategories.length > 0) {
                // Grab the first category from the master list.
                var categoryToAdd = [masterCategories[0].displayName];
                Office.context.mailbox.item.categories.addAsync(categoryToAdd, function(asyncResult) {
                  if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
                    console.log(`Successfully assigned category '${categoryToAdd}' to item.`);
                  } else {
                    console.log("categories.addAsync call failed with error: " + asyncResult.error.message);
                  }
                });
              } else {
                console.log("There are no categories in the master list on this mailbox. You can add categories using Office.context.mailbox.masterCategories.addAsync.");
              }
            } else {
              console.error(asyncResult.error);
            }
          });
        }

        function removeCategories() {
          Office.context.mailbox.item.categories.getAsync(function(asyncResult) {
            if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
              var categories = asyncResult.value;
              if (categories && categories.length > 0) {
                // Grab the first category assigned to this item.
                var categoryToRemove = [categories[0].displayName];
                Office.context.mailbox.item.categories.removeAsync(categoryToRemove, function(asyncResult) {
                  if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
                    console.log(`Successfully unassigned category '${categoryToRemove}' from this item.`);
                  } else {
                    console.log("categories.removeAsync call failed with error: " + asyncResult.error.message);
                  }
                });
              } else {
                console.log("There are no categories assigned to this item.");
              }
            } else {
              console.error(asyncResult.error);
            }
          });
        }
    language: typescript
template:
    content: |-
        <section class="ms-font-m">
            <p class="ms-font-m">This sample shows how to get, add, and remove <b>categories</b> assigned to the item.</p>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="add-categories" class="ms-Button">
            <span class="ms-Button-label">Assign categories</span>
          </button>
            <button id="get-categories" class="ms-Button">
                <span class="ms-Button-label">Get categories</span>
            </button>
            <button id="remove-categories" class="ms-Button">
                <span class="ms-Button-label">Unassign categories</span>
            </button>
        </section>
    language: html
style:
    content: |-
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    jquery@3.1.1
    @types/jquery@3.3.1