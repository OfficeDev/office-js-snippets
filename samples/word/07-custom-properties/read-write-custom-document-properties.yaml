id: word-basics-read-write-custom-document-properties
name: Read-write custom document properties
description: This sample shows how to add custom document properties of different types and how to read them as well.
author: OfficeDev
host: WORD
api_set:
    WordApi: 1.3
script:
    content: |-
        $("#number").click(() => tryCatch(insertNumericProperty));
        $("#string").click(() => tryCatch(insertStringProperty));
        $("#read").click(() => tryCatch(readCustomDocumentProperties));

        async function insertNumericProperty() {
            await Word.run(async (context) => {
                context.document.properties.customProperties.add("Numeric Property", 1234);

                await context.sync();
                console.log("Property added");
            });
        }

        async function insertStringProperty() {
            await Word.run(async (context) => {
                context.document.properties.customProperties.add("String Property", "Hello World!");

                await context.sync();
                console.log("Property added");
            });
        }

        async function readCustomDocumentProperties() {
            await Word.run(async (context) => {
                let properties = context.document.properties.customProperties;
                properties.load("key,type,value");

                await context.sync();
                for (var i = 0; i < properties.items.length; i++)
                    console.log("Property Name:" + properties.items[i].key + ";Type=" + properties.items[i].type + "; Property Value=" + properties.items[i].value);
            });
        }

        /** Default helper for invoking an action and handling errors. */
        async function tryCatch(callback) {
            try {
                await callback();
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }
    language: typescript
template:
    content: |4
           <h2 class="ms-font-m">This sample demonstrates how to insert custom document properties of different data types and how to read them.</h2>

                <div id="samples-container">
                    <p class="ms-font-m">Sample snippets to try. </p>

                    <button id="number" class="ms-Button">
                        <span class="ms-Button-label">Add 'numeric'property</span>
                    </button>   
                    <button id="string" class="ms-Button">
                        <span class="ms-Button-label">Add 'string' property.</span>
                    </button>  
                      <button id="read" class="ms-Button">
                        <span class="ms-Button-label">Read properties</span>
                    </button>   
                      
                </div>
    language: html
style:
    content: |4
            body {
                    margin: 0;
                    padding: 10px;
                }


                /* Button customization, including overwriting some Fabric defaults */

                .ms-Button, .ms-Button:focus {
                    background: #217346;
                    border: #217346;
                }

                    .ms-Button > .ms-Button-label,
                    .ms-Button:focus > .ms-Button-label,
                    .ms-Button:hover > .ms-Button-label {
                        color: white;
                    }

                    .ms-Button:hover, .ms-Button:active {
                        background: #164b2e;
                    }

                    .ms-Button.is-disabled, .ms-Button:disabled {
                        background-color: #f4f4f4;
                        border-color: #f4f4f4;
                    }

                    .ms-Button.is-disabled .ms-Button-label,
                    .ms-Button:disabled .ms-Button-label {
                        color: #a6a6a6;
                    }

                #setup.ms-Button, #setup.ms-Button:focus {
                    background: darkred;
                    border: darkred;
                }

                    #setup.ms-Button:hover, #setup.ms-Button:active {
                        background: red;
                    }

                #samples-container {
                    margin-top: 20px;
                }

                #samples-container .ms-Button {
                    display: block;
                    margin-bottom: 5px;
                }

                #samples-container .ms-Button, #setup-container .ms-Button {
                    margin-left: 20px;
                    min-width: 80px;
                }
    language: css
libraries: |-
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.min.js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.d.ts

    jquery@3.1.1
    @types/jquery@3.1.1
