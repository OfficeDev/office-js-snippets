order: 7
id: excel-range-range-operations
name: Range operations
description: 'Bounding rect, intersection, offset and resized range'
author: OfficeDev
host: EXCEL
api_set:
    ExcelApi: 1.1
script:
    content: |
        $("#setup").click(setup);
        $("#bounding-rect").click(boundingRect);
        $("#intersection").click(intersection);
        $("#offset-range").click(offsetRange);
        $("#resized-range").click(resizedRange);

        async function boundingRect() {
            try {
                await Excel.run(async (context) => {
                    const sheet = context.workbook.worksheets.getItem("Sample");

                    const rangeA = sheet.getRange("B2:D5");
                    const rangeB = sheet.getRange("D4:F8");

                    const boundingRect = rangeA.getBoundingRect(rangeB);
                    boundingRect.format.fill.color = "Blue";
                    boundingRect.getCell(0, 0).values = [["Bounding Rect"]];

                    await context.sync();
                });
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }

        async function intersection() {
            try {
                await Excel.run(async (context) => {
                    const sheet = context.workbook.worksheets.getItem("Sample");

                    const rangeA = sheet.getRange("B2:D5");
                    const rangeB = sheet.getRange("D4:F8");

                    const intersection = rangeA.getIntersection(rangeB);
                    intersection.format.fill.color = "Blue";
                    intersection.getCell(0, 0).values = [["Intersection"]];

                    await context.sync();
                });
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }

        async function offsetRange() {
            try {
                await Excel.run(async (context) => {
                    const sheet = context.workbook.worksheets.getItem("Sample");

                    const rangeA = sheet.getRange("B2:D5");

                    const offsetRange = rangeA.getOffsetRange(6, 3);
                    offsetRange.format.fill.color = "Blue";
                    offsetRange.getCell(0, 0).values = [["OffsetRange(6,3)"]];

                    await context.sync();
                });
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }

        async function resizedRange() {
            try {
                await Excel.run(async (context) => {
                    const sheet = context.workbook.worksheets.getItem("Sample");

                    const rangeB = sheet.getRange("D4:F8");

                    const resizedRange = rangeB.getResizedRange(2, -1);
                    resizedRange.format.fill.color = "Blue";
                    resizedRange.getCell(0, 0).values = [["ResizedRange(2,-1)"]];

                    await context.sync();
                });
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }

        async function setup() {
            try {
                await Excel.run(async (context) => {
                    const sheet = await OfficeHelpers.ExcelUtilities
                        .forceCreateSheet(context.workbook, "Sample");

                    const rangeA = sheet.getRange("B2:D5");
                    rangeA.format.fill.color = "green";
                    rangeA.getCell(0, 0).values = [["Range A"]];

                    const rangeB = sheet.getRange("D4:F8");
                    rangeB.format.fill.color = "yellow";
                    rangeB.getCell(0, 0).values = [["Range B"]];

                    sheet.activate();
                    await context.sync();
                });
            }
            catch (error) {
                OfficeHelpers.UI.notify(error);
                OfficeHelpers.Utilities.log(error);
            }
        }
    language: typescript
template:
    content: |
        <section class="ms-font-m">
            <p>This sample shows how to do various operations on ranges, for example, getting the bounding rect of two ranges, using the Excel JavaScript API.</p>
        </section>

        <section class="setup ms-font-m">
            <h3>Set up</h3>
            <button id="setup" class="ms-Button">
                <span class="ms-Button-label">Add sample data</span>
            </button>
        </section>

        <section class="samples ms-font-m">
            <h3>Try it out</h3>
            <button id="bounding-rect" class="ms-Button">
                <span class="ms-Button-label">Bounding rect</span>
            </button>
            <button id="intersection" class="ms-Button">
                <span class="ms-Button-label">Intersection</span>
            </button>
            <button id="offset-range" class="ms-Button">
                <span class="ms-Button-label">Offset range</span>
            </button>
            <button id="resized-range" class="ms-Button">
                <span class="ms-Button-label">Resized range</span>
            </button>
        </section>
    language: html
style:
    content: |
        section.samples {
            margin-top: 20px;
        }

        section.samples .ms-Button, section.setup .ms-Button {
            display: block;
            margin-bottom: 5px;
            margin-left: 20px;
            min-width: 80px;
        }
    language: css
libraries: |
    https://appsforoffice.microsoft.com/lib/1/hosted/office.js
    @types/office-js

    office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
    office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

    core-js@2.4.1/client/core.min.js
    @types/core-js

    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.min.js
    @microsoft/office-js-helpers@0.7.4/dist/office.helpers.d.ts

    jquery@3.1.1
    @types/jquery@3.3.1